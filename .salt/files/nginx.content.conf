{% set cfg = salt['mc_project.get_configuration'](
      salt['mc_utils.json_load'](data).project) %}
{% set data = cfg.data %}
# process django requests whenever we get a 418 ERROR, search below
error_page 418 = @django;

{% if data.get('force_ssl', False) %}
if ($forwarded_ssl_scheme != "https"){
    rewrite ^(.*)$ https://{{data.domain}}$1 permanent;
}
{% endif %}

{% macro auth() %}
{% if data.get('ldap_url', '') %}
auth_ldap "Restricted(ldap)";
auth_ldap_servers {{cfg.name}}auth;
{% elif data.get('http_users', {}) %}
auth_basic            "Restricted";
auth_basic_user_file  {{data.htaccess}};
{% endif %}
{% endmacro %}

location /static/ {
    {{auth()}}
    alias {{data.static}}/;
}
location /media/ {
    {{auth()}}
    alias {{data.media}}/;
}
location / {
    {{auth()}}
    if ($request_method = 'OPTIONS') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Credentials' 'true';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
       add_header 'Access-Control-Max-Age' 1728000;
       add_header 'Content-Type' 'text/plain charset=UTF-8';
       add_header 'Content-Length' 0;
       return 204;
    }
    if ($request_method = 'POST') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Credentials' 'true';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    }
    if ($request_method = 'GET') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Credentials' 'true';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    }
    if ($request_method = 'PUT') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Credentials' 'true';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    }
    if ($request_method = 'PATCH') {
       add_header 'Access-Control-Allow-Origin' '*';
       add_header 'Access-Control-Allow-Credentials' 'true';
       add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS';
       add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
    }
    return 418;
}

# invalid dot dirs
{% for location in data.get('disabled_urls', []) %}
location ~* {{location}} {
    return 404;
}
{% endfor%}

{% if data.get('admin_allowed_ips', []) %}
{% set admin_url = data.get('admin_url', '/admin') %}
location ~ {{admin_url}}.* {
    rewrite ^{{admin_url}}$ {{admin_url}}/ redirect;
    if ($dont_show_admin) {return 404;}
    return 418;
}
{% endif %}

location @django {
    {{auth()}}
    include proxy_params;
    proxy_pass http://{{cfg.name}}app;
}
