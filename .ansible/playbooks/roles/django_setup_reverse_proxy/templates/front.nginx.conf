{% set nginx = corpusops_nginx_vhost_vars %}
{% set ddata = cops_django_vars %}

gzip on;
# adds a Vary: Accept-Encoding in the response, and it's a valid varying
# info as we may not gzip depending on the value of Accept-Encoding
gzip_vary on;
gzip_proxied any;
# note that text/html is always on by default
gzip_types
    text/plain
    text/css
    text/xml
    text/javascript
    text/cache-manifest
    application/json
    application/x-javascript
    application/xml
    application/xml+rss
    application/rss+xml
    application/javascript
    application/atom+xml
    application/ld+json
    application/manifest+json
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    image/svg+xml
    application/xhtml+xml
    font/opentype;
gzip_buffers 16 8k;
gzip_proxied any;
gzip_http_version 1.1;
gzip_min_length 256;
gzip_comp_level 4;
client_max_body_size 100M;

{% if ddata.get('force_ssl', False) %}
if ($forwarded_ssl_scheme != "https"){
  rewrite ^(.*)$ https://{{ddata.domain}}$1 permanent;
}
{% endif %}

{% macro _auth() %}
{% if ddata.get('ldap_url', '') %}
  auth_ldap "Restricted(ldap)";
  auth_ldap_servers {{ddata.name}}auth;
{% else %}
  auth_basic            "Restricted";
  auth_basic_user_file  {{ddata.htpasswd}};
{% endif %}
{% endmacro %}

{% macro auth() %}
{% if ddata.get('http_auth_restricted', '') %}
{{_auth()}}
{% endif %}
{% endmacro %}

{% macro _cors() %}
  add_header 'Access-Control-Allow-Origin' '*';
  add_header 'Access-Control-Allow-Credentials' 'true';
  add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, PATCH, OPTIONS, DELETE';
  add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';
{% endmacro %}

{% macro cors() %}
  {{_cors()}}
  if ($request_method = 'OPTIONS') {
    add_header 'Access-Control-Max-Age' 1728000;
    add_header 'Content-Type' 'text/plain charset=UTF-8';
    add_header 'Content-Length' 0;
   return 204;
  }
{% endmacro %}
{% macro optimstatic() %}
    # static optimisations
    tcp_nodelay off;
    sendfile on;
	# Set the OS file cache.
    open_file_cache max=3000 inactive=300s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
{% endmacro %}

#location ~* ^.+\.(?:css|js|jpe?g|gif|htc|ico|png|html|xml|woff|woff2|eot|ttf|svg)$ {
location ~* ^.+\.(?:js|css|less|png|jpg|jpeg|gif|pdf|map|bz2|gz|tgz|lzmap|7z|htc|doc|txt|ico|zip|mp3|rar|exe|wmv|doc|avi|ppt|mpg|mpeg|tif|wav|mov|psd|ai|xls|mp4|m4a|swf|dat|dmg|iso|flv|m4v|torrent|ttf|woff2?|svg|eot|otf)$ {
    access_log off;
    expires 1d;
    # static optimisations
    tcp_nodelay off;
    sendfile on;
	# Set the OS file cache.
    open_file_cache max=3000 inactive=300s;
    open_file_cache_valid 60s;
    open_file_cache_min_uses 2;
    open_file_cache_errors off;
    {{auth()}}
    {{cors()}}
    types_hash_max_size 2048;
    try_files $uri $uri/ /index.html;
}

location / {
    {{auth()}}
    {{cors()}}
    types_hash_max_size 2048;
    add_header Cache-Control no-cache;
    try_files $uri $uri/ /index.html;
}
