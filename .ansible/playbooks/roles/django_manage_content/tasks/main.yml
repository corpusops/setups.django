---
- name: db & db user setup
  shell: |-
    cd "{{cops_django_vars.provision_dir}}"
    dodb="";
    {%- if cops_django_vars.db_has_postgis %}
    if ! ( su postgres -c "echo 'SELECT PostGIS_full_version();'|psql -v ON_ERROR_STOP=1  postgis" 2>&1 >/dev/null; );then
      dodb=1
    fi
    {% endif %}
    {%- if cops_django_vars.db_has_postgresql %}
    if ! ( su postgres -c "echo 'SELECT 1;'|psql -v ON_ERROR_STOP=1 {{cops_django_vars.db_name}}"  2>&1 >/dev/null; );then
      dodb=1
    fi
    {% endif %}
    if [ x"${dodb}" != "x" ];then
      export NONINTERACTIVE=1
      .ansible/scripts/call_ansible.sh .ansible/playbooks/db.yml \
        -e "{only_steps: true,
             cops_{{cops_django_db_role_type[cops_django_db_type]}}_s_manage_content: true}"
    fi
  when: "cops_django_vars.docker_has_db"
- become: true
  become_user: "{{cops_django_vars.user}}"
  include_tasks: _sudo.yml
- shell: |-
    cd "{{cops_django_vars.provision_dir}}"
    if ! ( LANG=C LC_ALL=C cops_supervisor.{{cops_django_vars.name}}_ctl status django-{{cops_django_vars.name}} 2>&1 | egrep -iq running; ) ;then
      cops_supervisor.{{cops_django_vars.name}}_ctl restart django-{{cops_django_vars.name}}
      echo schanged >&2
    fi
  register: _cops_django_managecontent_s
  changed_when: "'schanged' in _cops_django_managecontent_s.stderr"
  when: "cops_django_vars.docker_has_django"
