---
corpusops_core_projects_path: /srv/projects
# users than have full right to edit file in the container
# When this is enabled, the project user/group is also granted full perms
# (attention, uids!)
cops_django__supereditors_paths:
- "{{vars['cops_django_project_root']}}/Dockerfile"
- "{{vars['cops_django_project_root']}}/Dockerfile.dev"
- "{{vars['cops_django_project_root']}}/README.rst"
- "{{vars['cops_django_project_root']}}/Vagrantfile"
- "{{vars['cops_django_project_root']}}/bower.json"
- "{{vars['cops_django_project_root']}}/docker-compose-dev.yml"
- "{{vars['cops_django_project_root']}}/docker-compose.yml"
- "{{vars['cops_django_project_root']}}/docs"
- "{{vars['cops_django_project_root']}}/gulpfile.js"
- "{{vars['cops_django_project_root']}}/local"
- "{{vars['cops_django_project_root']}}/media"
- "{{vars['cops_django_project_root']}}/package.json"
- "{{vars['cops_django_project_root']}}/reconfigure.sh"
- "{{vars['cops_django_project_root']}}/requirements"
- "{{vars['cops_django_project_root']}}/setup.cfg"
- "{{vars['cops_django_project_root']}}/setup.py"
- "{{vars['cops_django_project_root']}}/src"
- "{{vars['cops_django_project_root']}}/static"
- "{{vars['cops_django_project_root']}}/tox.ini"
- "{{vars['cops_django_project_root']}}/vagrant_config.yml"
#- "{{vars['cops_django_project_root']}}/venv"
- "{{vars['cops_django_project_root']}}/venv/src"
- "{{vars['cops_django_project_root']}}/vm_manage"
- "{{vars['cops_django_data_root']}}"
# space separated string of uids to allow to write inside
# projetct directories (used in development through posix ACLS setter)
cops_django__supereditors: >-
  {{ ansible_env.get(
      'SUPEREDITORS', cops_supereditors|default('')
     ) | copsf_splitstrip | to_json }}
cops_django_supereditors_paths: "{{vars['cops_django__supereditors_paths']}}"
cops_django_supereditors: "{{vars['cops_django__supereditors']}}"
# on old ubuntu "virtualenv" does not exists, we isolate venv install
cops_django_venv_deb_packages: [virtualenv, python-virtualenv]
cops_django_venv_rh_packages: [virtualenv]
# cops_django_deb_packages is initialised on behalf of cops_registry voodoo
# and let users override the list easily
# cops_django_packages: "{{vars['cops_django_deb_packages___default']+['vim']}}"
cops_django_deb_gis_packages:
  - gdal-bin
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libgdal1h
    {%- elif (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '16.04'|copsf_looseversion) -%}
    libgdal1i
    {%- else -%}
    libgdal20
    {%- endif -%}"
  - geoip-bin
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libgeos-c1
    {%- elif (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '16.04'|copsf_looseversion) -%}
    libgeos-c1v5
    {%- else -%}
    libgeos-c1v5
    {%- endif -%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libgeos-3.4.2
    {%- elif (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '16.04'|copsf_looseversion) -%}
    libgeos-3.5.0
    {%- else -%}
    libgeos-3.6.2
    {%- endif -%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <
          '14.04'|copsf_looseversion) -%}
    libgeoip
    {%- else -%}
    libgeoip1
    {%- endif -%}"
cops_django_deb_runtime_packages:
  - apache2-utils
  - bzip2
  - gettext
  - git
  - groff
  - libcurl3
  - libfreetype6
  - liblcms2-2
  - libsqlite0
  - libsqlite3-0
  - libtiff5
  - libtool
  - python-setuptools
  - python-numpy
  - cython
  - m4
  - man-db
  - pkg-config
  - poppler-utils
  - "{% if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >= '18.04'|copsf_looseversion )
    %}tcl8.6{%else%}tcl8.5{%endif %}"
  - tcl8.5
  - wv
  - zlib1g
  - wget
  - rsync
  - libcairo2
  - libcairo-gobject2
  - libcairo-script-interpreter2
  - libxml2
  - libxslt1.1
  - python-passlib
  - python3-passlib
  - "{{cops_django_pkg_ssl}}"
  - "{{cops_django_pkg_db}}"
  - "python{{cops_django_pkg_python_slug}}"
  # db
  - libpq5
  - "{{cops_django_pkg_mysql}}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libcairomm-1.0-1
    {%- else -%}
    libcairomm-1.0-1v5
    {%- endif -%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion <=
          '14.04'|copsf_looseversion) -%}
    libsigc++-2.0-0c2a
    {%- else -%}
    libsigc++-2.0-0v5
    {%- endif -%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
     %}libwebp6{%else
     %}libwebp5{%endif%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
    %}python-pil{% else
    %}python-imaging{%endif%}"
  - "{% if ansible_distribution_version|copsf_looseversion <= '14.04'|copsf_looseversion

    %}libopenjpeg2{% elif
        ansible_distribution_version|copsf_looseversion < '18.04'|copsf_looseversion
    %}libopenjpeg5{% else
    %}libopenjp2-7{% endif %}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
    %}libgdbm5{%else%}libgdbm3{%endif%}"
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
    %}libreadline7{%else%}libreadline6{%endif%}"
cops_django_deb_packages___default: "{{
  (cops_django_deb_runtime_packages + cops_django_deb_gis_packages)
  | to_json
  }}"
# either null string or "3"
cops_django_pkg_python_slug: ""
cops_django_pkg_mysql: "libmysqlclient20"
cops_django_pkg_ssl: "libssl1.0.0"
cops_django_pkg_db: "libdb5.3"
cops_django_rh_packages: []
# cops_django_packages: "{{cops_django_deb_packages___default+['vim']}}"
cops_django_deb_build_packages___default:
  - "libpython{{cops_django_pkg_python_slug}}-dev"
  - "python{{cops_django_pkg_python_slug}}-dev"
  - libgdal-dev
  - libreadline-dev
  - libpq-dev
  - libdb-dev
  - libcairo2-dev
  - libssl-dev
  - libmysqlclient-dev
  - libcairomm-1.0-dev
  - libgdbm-dev
  - libxml2-dev
  - libgeos-dev
  - libgeoip-dev
  - libxslt1-dev
  - libsqlite0-dev
  - libsqlite3-dev
  - libcurl4-openssl-dev
  - libsigc++-2.0-dev
  - autoconf
  - libfreetype6-dev
  - automake
  - libbz2-dev
  - build-essential
  - liblcms2-dev
  - libtiff5-dev
  - "{%- if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >=
          '18.04'|copsf_looseversion)
     %}libopenjp2-7-dev{%else%}libopenjpeg-dev{%endif%}"
  - zlib1g-dev
  - libwebp-dev
  - "{% if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >= '18.04'|copsf_looseversion )
    %}tcl8.6-dev{%else%}tcl8.5-dev{%endif %}"
  - "{% if (
        ansible_distribution.lower() in ['ubuntu'] and
        ansible_distribution_version|copsf_looseversion >= '18.04'|copsf_looseversion )
    %}tk8.6-dev{%else%}tk8.5-dev{%endif %}"
cops_django_rh_build_packages: []
cops_django_DJANGO_SETTINGS_MODULE: "{{vars['cops_django_PROJECT']}}.settings.prod"
cops_django_WSGI: "{{vars['cops_django_PROJECT']}}.wsgi:application"
cops_django_adminmail: "root@{{vars['cops_django_domain']}}"
cops_django_admins___default:
- sysadmin:
    mail: "sysadmin+{{vars['cops_django_name']}}@{{(
        '.' in ansible_fqdn ) and
        ansible_fqdn or '{0}.local'.format(ansible_fqdn)}}"
    password: "{{vars['cops_django_admin_password']}}"
cops_django_admins: "{{vars['cops_django_admins___default']}}"
cops_django_host: localhost
cops_django_port: 8180
cops_django_gunicorn_workers: 10
cops_django_gunicorn_worker_class: sync
cops_django_gunicorn_worker_timeout: 9000
cops_django_allow_crawl: false
# One of
# sqlite: django.db.backends.sqlite3
# geodjango: django.contrib.gis.db.backends.postgis
# pgsql: django.db.backends.postgresql_psycopg2
# mysql: django.db.backends.mysql
cops_django_db_type: null
cops_django_db_has_postgresql: "{{(
	'postgresql' in '{0}'.format(vars['cops_django_db_type']))}}"
cops_django_db_has_postgis: "{{(
	'postgis' in '{0}'.format(vars['cops_django_db_type']))}}"
cops_django_db_role_type: {}
cops_django_db_role: null
# for sqlite: "{{vars['cops_django_data_root']}}/{{vars['cops_django_PROJECT']}}.sqlite"
cops_django_db_name: "{{vars['cops_django_name']}}"
cops_django_db_user: "{{vars['cops_django_name']}}"
cops_django_db_password: null
cops_django_db_host: "127.0.0.1"
# 3306 for mysql
cops_django_db_port: 5432
cops_django_databases:
  default:
    # SQLITE
    ENGINE: "{{vars['cops_django_db_type']}}"
    USER: "{{vars['cops_django_db_user']}}"
    PORT: "{{vars['cops_django_db_port']}}"
    HOST: "{{vars['cops_django_db_host']}}"
    NAME: "{{vars['cops_django_db_name']}}"
    PASSWORD: '{db_password}'
    # OPTIONS:
    #   init_command: 'SET storage_engine=INNODB'
cops_django_handlers_mail_admin: django.utils.log.AdminEmailHandler
cops_django_languages:
- "('fr', _('French'))"
- "('en', _('English'))"
- "('it', _('Italia'))"
cops_django_user_module: "django.contrib.auth.models"
cops_django_user_class: "User"
cops_django_tz: "Europe/Paris"
cops_django_allowed_hosts:
- localhost
- 127.0.0.1
- "{{vars['cops_django_domain']}}"
- "{{ansible_fqdn}}"
- "10.5.0.1"
cops_django_caches: {}
#  default:
#    BACKEND: 'django.core.cache.backends.memcached.MemcachedCache'
#    LOCATION: '127.0.0.1:11211'
cops_django_django_settings: "{{cops_django_django_settings___default}}"
cops_django_django_settings___dev:
  DEBUG: True
  TEMPLATE_DEBUG: True
cops_django_django_settings___default:
  DOMAIN: "{{vars['cops_django_domain']}}"
  ADMINS: "placeholder (totally computed)"
  SITE_ID: 1
  DATABASES: "{{vars['cops_django_databases']}}"
  DEFAULT_FROM_EMAIL: "{{vars['cops_django_adminmail']}}"
  SERVER_EMAIL: "root@{{ansible_fqdn}}"
  MEDIA_ROOT: "{{vars['cops_django_media']}}"
  STATIC_ROOT: "{{vars['cops_django_static']}}"
  LANGUAGE_CODE: fr-fr
  DATE_FORMAT: 'iso-8601'
  ALLOWED_HOSTS: "{{vars['cops_django_allowed_hosts']}}"
  CORS_ORIGIN_ALLOW_ALL: True
  # Internationalization
  # https://docs.djangoproject.com/en/1.6/topics/i18n/
  TIME_ZONE: "{{cops_django_tz}}"
  DEBUG: False
  TEMPLATE_DEBUG: False
  USE_X_FORWARDED_HOST: True
  USER_MODULE: "{{vars['cops_django_user_module']}}"
  USER_CLASS: "{{vars['cops_django_user_class']}}"
  SECRET_KEY: "{{vars['cops_django_secret_key']}}"
  LOGGING:
    version: 1
    disable_existing_loggers: False
    filters:
      require_debug_false: {'()': 'django.utils.log.RequireDebugFalse'}
      require_debug_true: {'()': 'django.utils.log.RequireDebugTrue'}
    formatters:
      django.server:
        '()': "logging.Formatter"
        # ONLY django >= 1.10
        #'()': "django.utils.log.ServerFormatter"
        "format": "[%(server_time)s] %(message)s"
    handlers:
      mail_admins:
        level: 'ERROR'
        class: "{{vars['cops_django_handlers_mail_admin']}}"
      django.server:
        class: "logging.StreamHandler"
        formatter: "django.server"
        level: "INFO"
      console:
        level: 'INFO'
        class: 'logging.StreamHandler'
    loggers:
      '':
        handlers: ['console']
        level: 'INFO'
        propagate: False
      django.request:
         handlers: ['console', 'mail_admins']
         level: 'ERROR'
         propagate: False
      django.server:
        handlers: ["console"]
        level: "INFO"
        propagate: False
      django:
         handlers: ['console', 'mail_admins']
         level: 'ERROR'
         propagate: True
  LANGUAGES: "{{vars['cops_django_languages']}}"

# extra conf to add to pgconf (directly added to a tuning conf file (string))
#
cops_django_extra_setting: {}
# CACHES: "{{vars['cops_django_caches']}}"
cops_django_raw_setting: ''
#
cops_django_sysctls: []
cops_django_domain: "{{cops_app_name}}.corpusops.local"
# for internal monitoring
cops_django_query_host: "127.0.0.1"
# for internal service access
cops_django_restart_check_retries: 60
cops_django_internal_host: "127.0.0.1"
cops_django_name: 'django'
cops_django_user: "{{vars['cops_django_name']}}-user"
cops_django_group: "{{vars['cops_django_name']}}-group"
cops_django_projects_dir: "{{corpusops_vars.projects_path}}"
cops_django_project_sdir: "{{vars['cops_django_name']}}"
cops_django_project_dir: "{{vars['cops_django_projects_dir']}}/{{vars['cops_django_project_sdir']}}"
cops_django_project_root: "{{vars['cops_django_project_dir']}}/project"
cops_django_data_root: "{{vars['cops_django_project_dir']}}/data"
cops_django_cfg: "{{vars['cops_django_data_root']}}/config"
cops_django_fixperms: "{{vars['cops_django_project_dir']}}/fixperms.sh"
cops_django_fixperms_cron: "/etc/cron.d/{{vars['cops_django_name']}}-fixperms"
cops_django_fixperms_cron_periodicity: "0 */2 * * *"
cops_django_secret_variables:
  - secret_key
  - admin_password
  - db_password
cops_django_cops_format_resolve_topdb: false
cops_django_cops_do_format_resolve: false
cops_django_cops_sub_namespaces:
  nginx: {}
  front_nginx: {}
  django_settings: {}
  extra_settings: {}
  s: {}
  lifecycle: {}
  supervisor: {}
  program: {}
  dbsmartbackup: {}
cops_django_use_etc_hosts: false
cops_django_django_uri: "http://{{vars['cops_django_domain']}}"
cops_django_env_overrides: {}
cops_django_env: {}
cops_django_django_bind_host: "{% if ansible_virtualization_type in ['docker'] %}0.0.0.0{% else %}localhost{%endif%}"
# templates
## entry point
cops_django_provision_dir: /provision_dir
cops_django_ep_template: "../templates/app_entry_point"
cops_django_ep_playbook: ".ansible/playbooks/site.yml"
cops_django_ep_main_ep: "/entry_point"
# activated in docker compose
cops_django_docker_has_db: false
cops_django_docker_has_ftp: false
cops_django_docker_has_dbsmartbackup: false
cops_django_docker_has_django: false
cops_django_docker_has_nginx: false
# global orchestration steps (db, code sync, web & workers prereqs, django config)
cops_django_become: true
cops_django_yarn_cmd: "yarn"
cops_django_yarn_install_args: ""
cops_django_yarn_build_args: ""
cops_django_yarn_extra_steps: []
#  - "add --force file:{{vars['cops_django_project_root']}}/develop/plone.restapi-angular"
# service
cops_django_service: "cops_supervisor.{{vars['cops_django_name']}}"
cops_django_services: ["{{vars['cops_django_service']}}", "nginx"]
cops_django_services_nginx_reload_state: "reloaded"
# cops_django_rhandlers: [restart_cops_django]
cops_django_rhandlers: [restart_cops_django_systemd, restart_cops_django]
# Reconfigure upon image reboots
cops_django_reconfigure_services: |-
  {% set ret = [] %}
  {% if ansible_virtualization_type in ['docker'] %}
  {% set _ = ret.append("post-start-{{vars['cops_django_service']}}") %}
  {% endif %}
  {{ ret | to_json }}
cops_django_activated: true
# Layout, files & configs
cops_django_stickymode: "2"
cops_django_static: "{{vars['cops_django_data_root']}}/static"
cops_django_media: "{{vars['cops_django_data_root']}}/media"
cops_django_files___default:
  - {path: "{{vars['cops_django_projects_dir']}}",
     owner: root, group: root, state: directory}
  - {path: "{{vars['cops_django_project_dir']}}",
     owner: root, group: root, state: directory}
  - {path: "{{vars['cops_django_project_root']}}",
     owner: "{{vars['cops_django_user']}}", group: "{{vars['cops_django_group']}}",
     state: directory, mode: "{{vars['cops_django_stickymode']}}750"}
  - {path: "{{vars['cops_django_data_root']}}",
     owner: "{{vars['cops_django_user']}}", group: "{{vars['cops_django_group']}}",
     state: directory, mode: "{{vars['cops_django_stickymode']}}751"}
  - {path: "{{vars['cops_django_media']}}",
     owner: "{{vars['cops_django_user']}}", group: "{{vars['cops_django_group']}}",
     state: directory, mode: "{{vars['cops_django_stickymode']}}750"}
  - {path: "{{vars['cops_django_static']}}",
     owner: "{{vars['cops_django_user']}}", group: "{{vars['cops_django_group']}}",
     state: directory, mode: "{{vars['cops_django_stickymode']}}750"}
  - {path: "{{vars['cops_django_front_doc_root']}}",
     owner: "{{vars['cops_django_user']}}", group: "{{vars['cops_django_group']}}",
     state: directory, mode: "{{vars['cops_django_stickymode']}}750"}
  - {path: "{{vars['cops_django_doc_root']}}",
     owner: "{{vars['cops_django_user']}}", group: "{{vars['cops_django_group']}}",
     state: directory, mode: "{{vars['cops_django_stickymode']}}750"}
cops_django_files: "{{vars['cops_django_files___default']}}"
# Config files
cops_django_configs___default:
  - {src: "../templates/crons",
     dest: "/etc/cron.d/django-{{vars['cops_django_name']}}",
     mode: "0644",
     owner: "root",
     group: "root"}
  - {src: "../templates/restart.sh",
     dest: "{{vars['cops_django_data_root']}}/restart.sh",
     mode: "0755",
     owner: "{{vars['cops_django_user']}}",
     group: "{{vars['cops_django_group']}}"}
  - {src: "../templates/logrotate.conf",
     dest: "{{vars['cops_django_logrotate_conf']}}",
     mode: "0640",
     owner: "root",
     group: "root"}
  - {src: "../templates/config.py",
     dest: "{{vars['cops_django_app_root']}}/{{vars['cops_django_PROJECT']}}/settings/local.py",
     mode: "0640",
     owner: "{{vars['cops_django_user']}}",
     group: "{{vars['cops_django_group']}}"}
  - {src: "../templates/runserver.sh",
     dest: "{{vars['cops_django_data_root']}}/runserver.sh",
     mode: "0755",
     owner: "{{vars['cops_django_user']}}",
     group: "{{vars['cops_django_group']}}"}
cops_django_venv_files: "{{vars['cops_django_venv_files___default']}}"
cops_django_venv_files___default:
  - {path: "{{vars['cops_django_data_root']}}/bin",
     owner: "{{vars['cops_django_user']}}", group: "{{vars['cops_django_group']}}",
     state: directory, mode: "{{vars['cops_django_stickymode']}}750"}
cops_django_venv_configs: "{{vars['cops_django_venv_configs___default']}}"
cops_django_venv_configs___default:
  - {src: "../templates/buildpy.sh",
     dest: "{{vars['cops_django_data_root']}}/bin/buildpy.sh",
     mode: "0755",
     owner: "{{vars['cops_django_user']}}",
     group: "{{vars['cops_django_group']}}"}
cops_django_configs: "{{vars['cops_django_configs___default']}}"
cops_django_fixperms_configs___default:
  - {src: "../templates/fixperms.sh",
     dest: "{{vars['cops_django_fixperms']}}", mode: "0755",
     owner: root, group: root}
cops_django_fixperms_configs: "{{vars['cops_django_fixperms_configs___default']}}"
cops_django_ep_configs___default:
  # script to reconfigure image before and after systemd is launched
  - {src: "../templates/reconfigure.sh",
     dest: "{{vars['cops_django_reconfigure']}}",
     mode: "0755",
     owner: "root",
     group: "root"}
  - {src: "../templates/post-start-reconfigure.service",
     dest: "/etc/systemd/system/post-start-{{vars['cops_django_service']}}.service",
     mode: "0644",
     owner: "root",
     group: "root"}
  - {src: "{{vars['cops_django_ep_template']}}",
     dest: "/app_entry_point", mode: "0755",
     owner: root, group: root}
cops_django_ep_configs: "{{vars['cops_django_ep_configs___default']}}"
# SystemD based reconfigure unit settings
cops_django_reconfigure_service_stderr: "journal{% if ansible_virtualization_type in ['docker']%}+console{%endif%}"
cops_django_reconfigure_service_stdout: "journal{% if ansible_virtualization_type in ['docker']%}+console{%endif%}"
cops_django_reconfigure_unit_after: "network.target {{vars['cops_django_service']}}.service"
cops_django_reconfigure_install_wantedby: "multi-user.target"
cops_django_reconfigure: "{{vars['cops_django_provision_dir']}}/reconfigure.sh"
cops_django_reconfigure_passenv: >
  COPS_ROOT NO_SILENT NO_OUTPUT NONINTERACTIVE
  ANSIBLE_CWD ANSIBLE_PLAY ANSIBLE_VARARGS ANSIBLE_ARGS
  A_VAULTS_FOLDERS A_VAULTS A_EXTRA_VAULTS
  A_INVENTORY A_ENV_NAME NO_DEFAULT_VAULTS
cops_django_reconfigure_verbosity: "-v"
# Code synchronnisation settings (FORCE_COPS_PROVISION_PUSH_CODE to force)
cops_django_push_codes_cwd: "{{vars['cops_cwd']}}"
cops_django_push_codes_sync_mode: "{{ (
  cops_installer_mode in ['vagrant'] or
  ansible_virtualization_type in ['docker']
  ) and 'rsync' or 'git' }}"
cops_django_push_codes_file_tests:
  git: []
  rsync: [".git"]
cops_django_push_codes_rsync_opts:
  git:   ["-azv",                           "--exclude", "local/*", "--exclude", ".vagrant", "--exclude", "*.retry"]
  rsync: ["-azv", "--include", ".git/**/*", "--exclude", "local/*", "--exclude", ".vagrant", "--exclude", "*.retry"]
cops_django_push_codes_rsync_submodule_opts:
  git:   ["-azv", "--exclude", "*.retry"]
  rsync: ["-azv", "--exclude", "*.retry"]
cops_django_push_codes:
- path: "{{vars['cops_django_project_root']}}"
  origin_path: "{{vars['cops_django_push_codes_cwd']}}"
  sync_mode: "{{cops_django_push_codes_sync_mode}}"
  rsync_opts: "{{cops_django_push_codes_rsync_opts[cops_django_push_codes_sync_mode]}}"
  file_tests: "{{cops_django_push_codes_file_tests[cops_django_push_codes_sync_mode]}}"
  owner: "{{vars['cops_django_user']}}"
  group: "{{vars['cops_django_group']}}"
  sub_paths:
  - path: local/setups.django
    rsync_opts: "{{cops_django_push_codes_rsync_submodule_opts[cops_django_push_codes_sync_mode]}}"
    is_submodule: true
# SSH deploy settings -> env vault
cops_deploy_ssh_key_paths:
  deploy:
    path: "{{'local/.ssh/deploy_key'|copsf_abspath}}"
    pub: "{{cops_deploy_ssh_pub_key|default('')}}"
    #  ssh-rsa xxx x@y
    # should be in encypted vault
    private: "{{cops_deploy_ssh_key|default('')}}"
    # -----BEGIN RSA PRIVATE KEY-----
    # -----END RSA PRIVATE KEY-----
# Reverse proxy Nginx
cops_django_default_vhost_is_default_server: false
cops_django_logrotate_conf: "/etc/logrotate.d/cops_{{vars['cops_django_name']}}.conf"
cops_django_logrotate_rotate: 365
cops_django_logrotate_size: 10M
cops_django_htpasswd: "/etc/nginx/{{vars['cops_django_name']}}-htpasswd"
cops_django_http_auth_restricted: false
cops_django_http_users:
- {user: "{{vars['cops_django_admin_user']}}", password: "{{vars['cops_django_admin_password']}}"}
#- {user: "myadmin", password: "mypassword"}
cops_django_http_port: "80"
cops_django_https_port: "443"
cops_django_nginx: {}
cops_django_nginx_domain: "{{vars['cops_django_domain']}}"
cops_django_nginx_server_aliases: ["www.{{vars['cops_django_domain']}}"]
cops_django_nginx_redirect_aliases: true
cops_django_nginx_port: "{{vars['cops_django_http_port']}}"
cops_django_nginx_ssl_port: "{{vars['cops_django_https_port']}}"
cops_django_nginx_content_headless_template: "../templates/nginx.headless.conf"
cops_django_nginx_content_template: "../templates/django.nginx.conf"
cops_django_nginx_top_template: "../templates/django.nginx.top.conf"
cops_django_nginx_basename: "corpus-{{vars['cops_django_name']}}"
cops_django_nginx_is_default_server: true
cops_django_nginx_htpasswd: "{{vars['cops_django_htpasswd']}}"
cops_django_nginx_ssl_protected: false
cops_django_nginx_ssl_cert: ""
cops_django_nginx_ssl_key: ""
cops_django_nginx_loglevel: crit
cops_django_nginx_upstream_name: "{{vars['cops_django_name']}}"
cops_django_nginx_doc_root: "{{vars['cops_django_doc_root']}}"
cops_django_front_dist_folder: "{{vars['cops_django_project_root']}}/dist"
cops_django_front_nginx: {}
cops_django_front_nginx_domain: null
# cops_django_front_nginx_domain: "front.{{vars['cops_django_domain']}}"
cops_django_front_nginx_server_aliases: []
# if front domain isnt activated, the vhost wont be installed (or link removed)
cops_django_front_nginx_install: "{{cops_django_front_nginx_domain|copsf_asbool}}"
cops_django_front_nginx_redirect_aliases: true
cops_django_front_nginx_port: "{{vars['cops_django_http_port']}}"
cops_django_front_nginx_ssl_port: "{{vars['cops_django_https_port']}}"
cops_django_front_nginx_content_template: "../templates/front.nginx.conf"
cops_django_front_nginx_top_template: "../templates/front.nginx.top.conf"
cops_django_front_nginx_basename: "corpus-front-{{vars['cops_django_name']}}"
cops_django_front_nginx_is_default_server: false
cops_django_front_nginx_ssl_protected: false
cops_django_front_nginx_htpasswd: "{{vars['cops_django_nginx_htpasswd']}}"
cops_django_front_nginx_ssl_cert: "{{vars['cops_django_nginx_ssl_cert']}}"
cops_django_front_nginx_ssl_key: "{{vars['cops_django_nginx_ssl_key']}}"
cops_django_front_nginx_loglevel: "{{vars['cops_django_nginx_loglevel']}}"
cops_django_front_nginx_upstream_name: "{{vars['cops_django_nginx_upstream_name']}}"
cops_django_front_nginx_doc_root: "{{vars['cops_django_front_doc_root']}}"
cops_django_orig_py: "/usr/bin/python{{vars['cops_django_pkg_python_slug']}}"
cops_django_venv_bin: virtualenv
cops_django_force_ssl: false
cops_django_doc_root: "{{vars['cops_django_static']}}"
cops_django_front_doc_root: "{{vars['cops_django_doc_root']}}"
cops_django_cron_hour: 1
cops_django_cron_minute: 5
cops_django_crons___default:
  - "# MAILTO=foobar"
cops_django_crons: "{{vars['cops_django_crons___default']}}"
# does the front and the instances autoconfigure themselves
cops_django_supervision_unit_restart: "always"
cops_django_supervision_unit_restartsec: "50s"
cops_django_supervision_unit_stopsec: "50s"
cops_django_py_root: "{{vars['cops_django_project_root']}}/venv"
cops_django_py: "{py_root}/bin/python"
cops_django_requirements:
- "{{vars['cops_django_project_root']}}/requirements/prod.txt"
cops_django_skip_eggs_cache: false
# head |tail (default head)
cops_django_link_selector_mode: head
cops_django_admin_user: "admin"
cops_django_secret_key: null
cops_django_admin_password: null
cops_django_venv_site_packages: false
cops_django_venv_eggs: ["pip"]
cops_django_overrides_buildout_secret: {}
cops_django_overrides_buildout: {}
cops_django_buildout_settings___default:
cops_django_PROJECT: project
cops_django_app_root: "{{vars['cops_django_project_root']}}/src"
cops_django_locale_cwd: "{{vars['cops_django_app_root']}}"
cops_django_runserver_args: "--nothreading --noreload {{vars['cops_django_host']}}:{{vars['cops_django_port']}}"
cops_django_environment___default:
  DJANGO_SETTINGS_MODULE: "{{vars['cops_django_DJANGO_SETTINGS_MODULE']}}"
  NOGUNICORN: ""
  CLEARSESSIONS: ""
cops_django_environment: "{{vars['cops_django_environment___default']}}"
cops_django_pip_root: "{{vars['cops_django_project_root']}}"
cops_django_media_source: "{{vars['cops_django_project_root']}}/media"
cops_django_disabled_urls: []
cops_django_ldap_url: ""
#cops_django_ldap_url: "ldap://ldap.net/dc=m,dc=com?uid?sub?(objectClass=person)"
cops_django_ldap_binddn: ""
#cops_django_ldap_binddn: "uid=f,dc=e,dc=e"
cops_django_ldap_binddn_passwd: "foo"
# only needed when wanting to build Python from source
cops_django_build_py: false
cops_django_py_full_ver: "{{vars['cops_django_py_ver']}}.13"
cops_django_py_ver: "2.7"
cops_django_py_inst: "{{vars['cops_django_data_root']}}/python"
cops_django_supervisorctl: "cops_supervisor.{{vars['cops_django_name']}}_ctl"
cops_django_ht_restarttime: "3"
cops_django_ht_string: "gunicorn"
cops_django_supervisor:
- kind: program
  name: "django-{{vars['cops_django_name']}}"
  data:
    command: "{{vars['cops_django_data_root']}}/runserver.sh"
    environment: >
      {%-for i,val in cops_django_environment.items() -%}
      {{i}}="{{val}}"{%-
        if loop.index<cops_django_environment|length-%},{%-
          endif%}
      {%- endfor %}
    user: "{{vars['cops_django_user']}}"
    directory: "{{vars['cops_django_app_root']}}"
    startsecs: "10"
    killasgroup: true
#
#corpusops_services_ftp_pureftpd_conf_ForcePassiveIP: "x.x.x.x"
#corpusops_services_ftp_pureftpd_conf_PassivePortRange: "22300 22400"
cops_django_ftp_root: "{{vars['cops_django_data_root']}}/ftp"
#cops_pureftpd_ftp_additional_users:
#- user: "{{vars['cops_django_user']}}-ro"
#  group: "{{vars['cops_django_group']}}-ro"
cops_pureftpd_ftp_users: []
#- myvirtualuser:
#    password: "secret"
#    home: "{{cops_django_vars.ftp_root}}"
#    user: "{{cops_django_vars.user    }}"
#    group: "{{cops_django_vars.group   }}"
#    # sys user under the hood (must exist before)
#    mode: "0771"
#    # delete: false
# - myvirtualuser-ro:
#     password: "secret"
#     home: "{{cops_django_vars.ftp_root}}"
#     user: "{{cops_django_vars.user    }}-ro"
#     group: "{{cops_django_vars.group   }}-ro"
#     owner: "{{cops_django_vars.user}}"
#     owner_group: "{{cops_django_vars.group}}"
#     # sys user under the hood (must exist before)
#     mode: "2771"
#     perms: r--
#     mode: "0771"
#     # delete: false
# settings for db backup
cops_django_dbsmartbackup: {}
# vim:set ft=sls:
